@import "./fab-button";
@import "./fab-button.md.vars";

// Material Design FAB Button
// --------------------------------------------------

:host {
  --background: #{color('brand', '3')};
  --background-activated: transparent;
  --background-focused: currentColor;
  --background-hover: currentColor;
  --background-activated-opacity: 0;
  --background-focused-opacity: .24;
  --background-hover-opacity: .08;
  --color: #{$fab-md-text-color};
  --box-shadow: #{$fab-md-box-shadow};
  --transition: #{
    box-shadow 280ms cubic-bezier(.4, 0, .2, 1),
    background-color 280ms cubic-bezier(.4, 0, .2, 1),
    color 280ms cubic-bezier(.4, 0, .2, 1),
    opacity 15ms linear 30ms,
    transform 270ms cubic-bezier(0, 0, .2, 1) 0ms
  };
  --close-icon-font-size: #{$fab-md-icon-font-size};
}

:host(.ion-activated) {
  --box-shadow: #{$fab-md-box-shadow-activated};
}

::slotted(ion-icon) {
  font-size: $fab-md-icon-font-size;
}


// FAB buttons in a list
// --------------------------------------------------

:host(.fab-button-in-list) {
  --color: #{$fab-md-list-button-text-color};
  --color-activated: #{$fab-md-list-button-text-color};
  --color-focused: var(--color-activated);
  --background: #{$fab-md-list-button-background-color};
  --background-activated: transparent;
  --background-focused: #{$fab-md-list-button-background-color-activated};
  --background-hover: #{$fab-md-list-button-background-color-hover};
}

:host(.fab-button-in-list) ::slotted(ion-icon) {
  font-size: $fab-md-list-button-icon-font-size;
}


// FAB Button: Color
// --------------------------------------------------

// Focused Button with Color
:host(.ion-color.ion-focused) .button-native {
  color: #{current-color(contrast)};

  &::after {
    background: #{current-color(contrast)};
  }
}
:host(.ion-color.ion-activated) .button-native {
  color: #{current-color(contrast)};

  &::after {
    background: transparent;
  }
}

@media (any-hover: hover) {
  :host(.ion-color:hover) .button-native {
    color: #{current-color(contrast)};

    &::after {
      background: #{current-color(contrast)};
    }
  }
}

//////////////////////////////
// medgrupo
//////////////////////////////

:host {
  --background: #{color('brand', '3')};

  width: 48px;
  height: 48px;

  .close-icon {
    font-size: 24px;
    color: color('brand', '3', 'contrast');
  }
}

::slotted(ion-icon) {
  width: 24px;
  height: 24px;
  stroke: color('brand', '3', 'contrast');
}

// ////////////////////
// dsColor
// ////////////////////

:host(.med-color) {
  --background: #{curr-color('color', '3')};

  .close-icon {
    width: 24px;
    color: curr-color('color', '3', 'contrast');
  }

  &::slotted(ion-icon) {
    stroke: curr-color('color', '3', 'contrast');
  }
}

:host(.fab-button-in-list.med-color) ::slotted(ion-icon) {
  stroke: curr-color('color', '3', 'contrast');
}

:host(.med-color-neutral) {
  --background: #{curr-color('neutral')};

  .close-icon {
    color: curr-color('neutral', null, 'contrast');
  }

  &::slotted(ion-icon) {
    stroke: curr-color('neutral', null, 'contrast');
  }
}

:host(.fab-button-in-list.med-color-neutral) ::slotted(ion-icon) {
  stroke: curr-color('neutral', null, 'contrast');
}

:host(.med-color-feedback) {
  --background: #{curr-color('feedback')};

  .close-icon {
    color: curr-color('feedback', null, 'contrast');
  }

  &::slotted(ion-icon) {
    stroke: curr-color('feedback', null, 'contrast');
  }
}

:host(.fab-button-in-list.med-color-feedback) ::slotted(ion-icon) {
  stroke: curr-color('feedback', null, 'contrast');
}
