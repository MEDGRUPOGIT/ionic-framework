@import "./fab-button";
@import "./fab-button.md.vars";

// Material Design FAB Button
// --------------------------------------------------

:host {
  --background: #{$fab-md-background-color};
  --background-activated: transparent;
  --background-focused: currentColor;
  --background-hover: currentColor;
  --background-activated-opacity: 0;
  --background-focused-opacity: .24;
  --background-hover-opacity: .08;
  --color: #{$fab-md-text-color};
  --box-shadow: #{$fab-md-box-shadow};
  --transition: #{
    box-shadow 280ms cubic-bezier(.4, 0, .2, 1),
    background-color 280ms cubic-bezier(.4, 0, .2, 1),
    color 280ms cubic-bezier(.4, 0, .2, 1),
    opacity 15ms linear 30ms,
    transform 270ms cubic-bezier(0, 0, .2, 1) 0ms
  };
  --close-icon-font-size: #{$fab-md-icon-font-size};
}

:host(.ion-activated) {
  --box-shadow: #{$fab-md-box-shadow-activated};
}

::slotted(ion-icon) {
  font-size: $fab-md-icon-font-size;
}


// FAB buttons in a list
// --------------------------------------------------

:host(.fab-button-in-list) {
  --color: #{$fab-md-list-button-text-color};
  --color-activated: #{$fab-md-list-button-text-color};
  --color-focused: var(--color-activated);
  --background: #{$fab-md-list-button-background-color};
  --background-activated: transparent;
  --background-focused: #{$fab-md-list-button-background-color-activated};
  --background-hover: #{$fab-md-list-button-background-color-hover};
}

:host(.fab-button-in-list) ::slotted(ion-icon) {
  font-size: $fab-md-list-button-icon-font-size;
}


// FAB Button: Color
// --------------------------------------------------

// Focused Button with Color
:host(.ion-color.ion-focused) .button-native {
  color: #{current-color(contrast)};

  &::after {
    background: #{current-color(contrast)};
  }
}
:host(.ion-color.ion-activated) .button-native {
  color: #{current-color(contrast)};

  &::after {
    background: transparent;
  }
}

@media (any-hover: hover) {
  :host(.ion-color:hover) .button-native {
    color: #{current-color(contrast)};

    &::after {
      background: #{current-color(contrast)};
    }
  }
}

@import './fab-button.med.scss';

@import "../../../templarios/abstracts";

:host {
  --background: #{color('brand', 'gradient')};
  --padding-bottom: 8px;
  --padding-end: 8px;
  --padding-start: 8px;
  --padding-top: 8px;
  --border-radius: 31.25em;
  --box-shadow: 0 2px 4px rgba(0, 0, 0, 0.14), 0 3px 4px rgba(0, 0, 0, 0.12), 0 1px 5px rgba(0, 0, 0, 0.2);
  --ripple-color: transparent;

  height: 40px;
  min-width: 40px;
  width: auto;
  max-width: 100%;

  .button-native {
    contain: none;
  }

  .button-inner {
    position: relative;
  }
}

:host(.fab-button-disabled) {
  --background:#{color('neutral', '8')};
  opacity: 0.8;

  ::slotted(ion-icon) {
    fill: #{medsoft-color(neutral-light, prime)};
  }
}

::slotted(ion-label) {
  color: #{color('neutral')};
  padding-left: 8px;
  padding-right: 8px;
  font-size: 14px;
  font-weight: 600;
  line-height: 100%;
}

:host(.fab-button-close-active) {
  ::slotted(ion-label) {
    display: none;
  }
}

// sizes
:host([ds-size="md"]) {
  height: 48px !important;
  min-width: 48px !important;

  ::slotted(ion-label) {
    padding-left: 16px;
    padding-right: 16px;
  }
}

:host([ds-size="lg"]) {
  height: 56px !important;
  min-width: 56px !important;

  ::slotted(ion-label) {
    padding-left: 16px;
    padding-right: 16px;
  }
}

:host(.fab-button-close-active) ::slotted([slot="label"]) {
  transform: scale(.4) rotateZ(-45deg);
}

// ////////////////////
// color
// ////////////////////

:host(.med-color) {
  --background: #{curr-color('color', '3')};
}

// ////////////////////
// neutral
// ////////////////////

:host(.med-color-neutral) {
  --background: #{curr-color('neutral')};
}

// //////////
// feedback
// //////////

:host(.med-color-feedback) {
  --background: #{curr-color('feedback')};
}
