@import "../../../../templarios/abstracts";

:host {
  /**
   * OBS: sobreescrita das css custom properties do ionic.
   * @prop --background: Define a cor de background do componente.
   * @prop --color: Define a cor de texto do componente.
   */
  --background: #{color('brand', 'gradient')};
  --color: #{color('brand', 'gradient', 'contrast')};
  --border-radius: var(--med-border-radius-pill);
  --transition: background 300ms ease-out, color 300ms ease-out, border-color 300ms ease-out, opacity 300ms ease-out;
  --font-size: var(--med-font-size-xxs);
  --padding: 0 var(--med-spacing-inline-xxs);
  --padding-label: 0 var(--med-spacing-inline-xxxs);
  --min-height: 48px;
  --min-width: auto;
}

:host(.med-button) {
  min-height: var(--min-height);
  min-width: var(--min-width);
  height: auto;
  font-size: var(--font-size);
  font-weight: var(--med-font-weight-semibold);
  text-transform: uppercase;
  margin: 0;
}

:host(.med-button) .button-native {
  padding: var(--padding);
  min-height: var(--min-height);
  line-height: var(--med-line-height-compressed);
  box-shadow: none;
}

:host(.med-button) .button-inner__label {
  padding: var(--padding-label);
  display: flex;
  align-items: center;
}

:host(.med-button.button-block.button-has-icon-only) {
  --border-radius: var(--med-border-radius-pill);
}

// ////////////////////
// slotted
// ////////////////////

::slotted(ion-icon) {
  font-size: 24px;
  stroke: var(--color);
  transition: stroke 300ms ease-out;
}

::slotted(ion-icon[slot="start"]) {
  margin: 0;
}

::slotted(ion-icon[slot="end"]) {
  margin: 0;
}

// ////////////////////
// icon-only
// ////////////////////

:host(.med-button.button-has-icon-only) {
  --border-radius: var(--med-border-radius-full);
  --min-height: 48px;
  --min-width: 48px;
  --padding: 0;
  --padding-label: 0;
}

// ////////////////////
// sizes
// ////////////////////

:host(.med-button.med-button--sm) {
  --min-height: 40px;
  --min-width: 40px;
}

:host(.med-button.med-button--sm.button-has-icon-only) {
  --min-width: 40px;
  --padding: 0;
  --padding-label: 0;
}

:host(.med-button.med-button--xs) {
  --padding: 0 var(--med-spacing-inline-base);
  --min-height: 32px;
  --font-size: var(--med-font-size-xxxs);
}

:host(.med-button.med-button--xs) ::slotted(ion-icon) {
  font-size: 16px;
}

:host(.med-button.med-button--xs.button-has-icon-only) {
  --min-width: 32px;
  --padding: 0;
  --padding-label: 0;
}

:host(.med-button.med-button--xxs) {
  --padding: 0 var(--med-spacing-inline-base);
  --min-height: 24px;
  --min-width: 24px;
  --font-size: var(--med-font-size-nano);
}

:host(.med-button.med-button--xxs) ::slotted(ion-icon) {
  font-size: 16px;
}

:host(.med-button.med-button--xxs.button-has-icon-only) {
  --min-width: 24px;
  --padding: 0;
  --padding-label: 0;
}

// ////////////////////
// states
// ////////////////////

@media (any-hover: hover) {
  :host(.med-button:hover) .button-native::before {
    background: color('brand', '3');
    opacity: 1;
  }
}

:host(.med-button.ion-focused) .button-native::before {
  background: color('brand', '3');
  opacity: 1;
}

:host(.med-button.ion-activated) .button-native::before {
  opacity: 1;
}

:host(.med-button.button-disabled) {
  cursor: initial;
  pointer-events: none;
  opacity: var(--med-opacity-level-half);
}

:host(.med-button.button-disabled) .button-native::before {
  opacity: var(--med-opacity-level-half);
}

:host(.med-button) ion-ripple-effect {
  --ripple-color: #{color('brand', '2')};
  --ripple-opacity: 1;
}

// ////////////////////
// color
// ////////////////////

:host(.med-button.med-color)  {
  --background: #{curr-color('color', 'gradient')};
  --color: #{curr-color('color', 'gradient', 'contrast')};
}

@media (any-hover: hover) {
  :host(.med-button.med-color:hover) .button-native::before {
    background: curr-color('color', '3');
  }
}

:host(.med-button.med-color.ion-focused) .button-native::before {
  background: curr-color('color', '3');
}

:host(.med-button.med-color) ion-ripple-effect {
  --ripple-color: #{curr-color('color', '2')};
  --ripple-opacity: 1;
}

// ////////////////////
// neutral
// ////////////////////

:host(.med-button.med-color-neutral)  {
  --background: #{curr-color('neutral')};
  --color: #{curr-color('neutral', null, 'contrast')};
}

@media (any-hover: hover) {
  :host(.med-button.med-color-neutral:hover) .button-native::before {
    background: #{color('neutral', '10', null, var(--med-opacity-level-semitransparent))};
  }
  :host(.med-button.med-color-neutral.med-color-neutral-10:hover) .button-native::before {
    background: #{color('neutral', '1', null, var(--med-opacity-level-semitransparent))};
  }
}

:host(.med-button.med-color-neutral.ion-focused) .button-native::before {
  opacity: var(--med-opacity-level-semitransparent);
}

:host(.med-button.med-color-neutral) ion-ripple-effect {
  --ripple-color: #{color('neutral', '10')};
  --ripple-opacity: var(--med-opacity-level-semitransparent);
}

:host(.med-button.med-color-neutral.med-color-neutral-10) ion-ripple-effect {
  --ripple-color: #{color('neutral', '1')};
  --ripple-opacity: var(--med-opacity-level-semitransparent);
}

// ////////////////////
// feedback
// ////////////////////

:host(.med-button.med-color-feedback)  {
  --background: #{curr-color('feedback')};
  --color: #{curr-color('feedback', null, 'contrast')};
}

@media (any-hover: hover) {
  :host(.med-button.med-color-feedback:hover) .button-native::before {
    background: #{color('neutral', '10', null, var(--med-opacity-level-semitransparent))};
  }
}

:host(.med-button.med-color-feedback.ion-focused) .button-native::before {
  opacity: var(--med-opacity-level-semitransparent);
}

:host(.med-button.med-color-feedback) ion-ripple-effect {
  --ripple-color: #{color('neutral', '10')};
  --ripple-opacity: var(--med-opacity-level-semitransparent);
}

// //////////////////////////////
// after removal and before replace
// //////////////////////////////

:host .button-native::after {
  display: none;
}

:host .button-native::before {
  @include button-state();
  transition: var(--transition);
}
