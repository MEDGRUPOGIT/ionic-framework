@import "../../../../templarios/abstracts";

:host(.med-button--tertiary) {
  --background: transparent;
  --color: #{color('neutral', '10')};
  --border-radius: var(--med-border-radius-nano);
  --padding: 0;
  --padding-label: 0 var(--med-spacing-inline-xxxs);
  --min-height: 24px;
  --line-height: #{line-height($med-font-size-xxs)};
  --font-weight: var(--med-font-weight-semibold);
}

:host(.med-button--tertiary) ion-ripple-effect {
  --ripple-color: #{color('brand', '3')};
  --ripple-opacity: var(--med-opacity-level-light);
}

:host(.med-button.med-button--tertiary.button-has-icon-only) {
  --border-radius: var(--med-border-radius-full);
}


// ////////////////////
// slotted
// ////////////////////

::slotted(ion-icon) {
  font-size: 24px;
  stroke: var(--color);
  transition: stroke 300ms ease-out;
}

::slotted(ion-icon[slot="start"]) {
  margin: 0;
  padding-left: var(--med-spacing-inline-xxxs);
}

::slotted(ion-icon[slot="end"]) {
  margin: 0;
  padding-right: var(--med-spacing-inline-xxxs);
}

// ////////////////////
// sizes
// ////////////////////

// lg
:host(.med-button--tertiary.med-button--lg) {
  --font-size: var(--med-font-size-xs);
  --line-height: #{line-height($med-font-size-xs)};
  --min-height: 24px;
  --min-width: 24px;
}

:host(.med-button--tertiary.med-button--lg) ::slotted(ion-icon) {
  font-size: 24px;
}

:host(.med-button--tertiary.med-button--lg.button-has-icon-only) {
  --min-height: 64px;
  --min-width: 64px;
}

:host(.med-button--tertiary.med-button--lg.button-has-icon-only) ::slotted(ion-icon) {
  font-size: 48px;
}

// md
:host(.med-button--tertiary.med-button--md) {
  --font-size: var(--med-font-size-xxs);
  --line-height: #{line-height($med-font-size-xxs)};
  --min-height: 24px;
  --min-width: 24px;
}

:host(.med-button--tertiary.med-button--md) ::slotted(ion-icon) {
  font-size: 24px;
}

:host(.med-button--tertiary.med-button--md.button-has-icon-only) {
  --min-height: 48px;
  --min-width: 48px;
}

:host(.med-button--tertiary.med-button--md.button-has-icon-only) ::slotted(ion-icon) {
  font-size: 32px;
}

// sm
:host(.med-button--tertiary.med-button--sm) {
  --font-size: var(--med-font-size-xxxs);
  --line-height: #{line-height($med-font-size-xxxs)};
  --min-height: 16px;
  --min-width: 16px;
}

:host(.med-button--tertiary.med-button--sm) ::slotted(ion-icon) {
  font-size: 16px;
}

:host(.med-button--tertiary.med-button--sm.button-has-icon-only) {
  --min-height: 40px;
  --min-width: 40px;
}

:host(.med-button--tertiary.med-button--sm.button-has-icon-only) ::slotted(ion-icon) {
  font-size: 24px;
}

// xs
:host(.med-button--tertiary.med-button--xs) {
  --font-size: var(--med-font-size-nano);
  --line-height: #{line-height($med-font-size-nano)};
  --min-height: 16px;
  --min-width: 16px;
}

:host(.med-button--tertiary.med-button--xs) ::slotted(ion-icon) {
  font-size: 16px;
}

:host(.med-button--tertiary.med-button--xs.button-has-icon-only) {
  --min-height: 32px;
  --min-width: 32px;
}

:host(.med-button--tertiary.med-button--xs.button-has-icon-only) ::slotted(ion-icon) {
  font-size: 24px;
}

// xxs
:host(.med-button--tertiary.med-button--xxs) ::slotted(ion-icon) {
  font-size: 16px;
}

:host(.med-button--tertiary.med-button--xxs.button-has-icon-only) {
  --min-height: 24px;
  --min-width: 24px;
}

:host(.med-button--tertiary.med-button--xxs.button-has-icon-only) ::slotted(ion-icon) {
  font-size: 24px;
}

// xxxs
:host(.med-button--tertiary.med-button--xxxs.button-has-icon-only) {
  --min-height: 16px;
  --min-width: 16px;
}

:host(.med-button--tertiary.med-button--xxxs.button-has-icon-only) ::slotted(ion-icon) {
  font-size: 16px;
}

// ////////////////////
// states
// ////////////////////

:host(.med-button--tertiary.button-disabled) {
  --color: color('neutral', '10');
}

// //////////
// before disable
// //////////

@media (any-hover: hover) {
  :host(.med-button--tertiary:hover) .button-native::before {
    background: color('brand', '3', null,  var(--med-opacity-level-light));
  }
}

:host(.med-button--tertiary.ion-focused) .button-native::before {
  background: color('brand', '3', null,  var(--med-opacity-level-light));
}

:host(.med-button--tertiary.ion-activated) .button-native::before {
  background: transparent
}

:host(.med-button--tertiary.button-disabled) .button-native::before {
  opacity: 0;
}

// ////////////////////
// color
// ////////////////////

:host(.med-button--tertiary.med-color) {
  --background: transparent;
  --color: #{color('neutral', '10')};
}

:host(.med-button--tertiary.med-color) ion-ripple-effect {
  --ripple-color: #{curr-color('color', '3')};
}

@media (any-hover: hover) {
  :host(.med-button--tertiary.med-color:hover) .button-native::before {
    background: curr-color('color', '3', null,  var(--med-opacity-level-light));
  }
}

:host(.med-button--tertiary.med-color.ion-focused) .button-native::before {
  background: curr-color('color', '3', null, var(--med-opacity-level-light));
}

:host(.med-button--tertiary.med-color.ion-activated) .button-native::before {
  background: transparent
}

:host(.med-button--tertiary.med-color.button-disabled) .button-native::before {
  opacity: 0;
}

// ////////////////////
// feedback
// ////////////////////

:host(.med-button--tertiary.med-color-feedback) {
  --background: transparent;
  --color: #{color('neutral', '10')};
}

:host(.med-button--tertiary.med-color-feedback) ion-ripple-effect {
  --ripple-color: #{curr-color('feedback')};
}

@media (any-hover: hover) {
  :host(.med-button--tertiary.med-color-feedback:hover) .button-native::before {
    background: curr-color('feedback', null, null,  var(--med-opacity-level-light));
  }
}

:host(.med-button--tertiary.med-color-feedback.ion-focused) .button-native::before {
  background: curr-color('feedback', null, null, var(--med-opacity-level-light));
}

:host(.med-button--tertiary.med-color-feedback.ion-activated) .button-native::before {
  background: transparent
}

:host(.med-button--tertiary.med-color-feedback.button-disabled) .button-native::before {
  opacity: 0;
}

// ////////////////////
// neutral
// ////////////////////

:host(.med-button--tertiary.med-color-neutral) {
  --background: transparent;
  --color: #{color('neutral', '10')};
}

// //////////////////////////////
// solid
// //////////////////////////////

:host(.med-button.med-button--solid) {
  --background: #{color('brand', '3')};
  --color: #{color('brand', '3', 'contrast')};
}

// ////////////////////
// color
// ////////////////////

:host(.med-button.med-button--solid.med-color)  {
  --background: #{curr-color('color', '3')};
  --color: #{curr-color('color', '3', 'contrast')};
}

@media (any-hover: hover) {
  :host(.med-button.med-button--solid.med-color:hover) .button-native::before {
    background: curr-color('color', '3');
  }
}

:host(.med-button.med-button--solid.med-color.ion-focused) .button-native::before {
  background: curr-color('color', '3');
}


// ////////////////////
// neutral
// ////////////////////

:host(.med-button.med-button--solid.med-color-neutral)  {
  --background: #{curr-color('neutral')};
  --color: #{curr-color('neutral', null, 'contrast')};
}

@media (any-hover: hover) {
  :host(.med-button.med-button--solid.med-color-neutral:hover) .button-native::before {
    background: #{color('neutral', '10', null, var(--med-opacity-level-semitransparent))};
  }
  :host(.med-button.med-button--solid.med-color-neutral.med-color-neutral-10:hover) .button-native::before {
    background: #{color('neutral', '1', null, var(--med-opacity-level-semitransparent))};
  }
}

:host(.med-button.med-button--solid.med-color-neutral.ion-focused) .button-native::before {
  opacity: var(--med-opacity-level-semitransparent);
}

:host(.med-button.med-button--solid.med-color-neutral) ion-ripple-effect {
  --ripple-color: #{color('neutral', '10')};
  --ripple-opacity: var(--med-opacity-level-semitransparent);
}

:host(.med-button.med-button--solid.med-color-neutral.med-color-neutral-10) ion-ripple-effect {
  --ripple-color: #{color('neutral', '1')};
  --ripple-opacity: var(--med-opacity-level-semitransparent);
}

// ////////////////////
// feedback
// ////////////////////

:host(.med-button.med-button--solid.med-color-feedback)  {
  --background: #{curr-color('feedback')};
  --color: #{curr-color('feedback', null, 'contrast')};
}

@media (any-hover: hover) {
  :host(.med-button.med-button--solid.med-color-feedback:hover) .button-native::before {
    background: #{color('neutral', '10', null, var(--med-opacity-level-semitransparent))};
  }
}

:host(.med-button.med-button--solid.med-color-feedback.ion-focused) .button-native::before {
  opacity: var(--med-opacity-level-semitransparent);
}

:host(.med-button.med-button--solid.med-color-feedback) ion-ripple-effect {
  --ripple-color: #{color('neutral', '10')};
  --ripple-opacity: var(--med-opacity-level-semitransparent);
}
