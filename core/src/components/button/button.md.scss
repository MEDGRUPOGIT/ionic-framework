@import "./button";
@import "./button.md.vars";


// Material Design Button
// --------------------------------------------------

:host {
    --border-radius: #{$button-md-border-radius};
    --padding-top: #{$button-md-padding-top};
    --padding-bottom: #{$button-md-padding-bottom};
    --padding-start: #{$button-md-padding-start};
    --padding-end: #{$button-md-padding-end};
    --transition: box-shadow 280ms cubic-bezier(.4, 0, .2, 1),
                    background-color 15ms linear,
                    color 15ms linear;

    @include margin($button-md-margin-top, $button-md-margin-end, $button-md-margin-bottom, $button-md-margin-start);

    height: #{$button-md-height};

    font-size: #{$button-md-font-size};
    font-weight: #{$button-md-font-weight};

    letter-spacing: #{$button-md-letter-spacing};

    text-transform: #{$button-md-text-transform};
    }

    // Material Design Solid Button
    // --------------------------------------------------

    :host(.med-button-solid) {
    --background-activated: transparent;
    --background-hover: #{ion-color(primary, contrast)};
    --background-focused: #{ion-color(primary, contrast)};
    --background-activated-opacity: 0;
    --background-focused-opacity: .24;
    --background-hover-opacity: .08;
    --box-shadow: #{$button-md-box-shadow};
    }

    :host(.med-button-solid.ion-activated) {
    --box-shadow: #{$button-md-box-shadow-activated};
    }

    // Material Design Outline Button
    // --------------------------------------------------

    :host(.med-button-outline) {
    --border-width: 2px;
    --border-style: solid;
    --box-shadow: none;
    --background-activated: transparent;
    --background-focused: #{ion-color(primary, base)};
    --background-hover: #{ion-color(primary, base)};
    --background-activated-opacity: 0;
    --background-focused-opacity: .12;
    --background-hover-opacity: .04;
    }

    :host(.med-button-outline.ion-activated.ion-color) .button-native {
    background: transparent;
    }


    // Material Design Clear Button
    // --------------------------------------------------

    :host(.med-button-clear) {
    --background-activated: transparent;
    --background-focused: #{ion-color(primary, base)};
    --background-hover: #{ion-color(primary, base)};
    --background-activated-opacity: 0;
    --background-focused-opacity: .12;
    --background-hover-opacity: .04;
    }


    // Material Design Round Button
    // --------------------------------------------------

    :host(.button-round) {
    --border-radius: #{$button-md-round-border-radius};
    --padding-top: #{$button-md-round-padding-top};
    --padding-start: #{$button-md-round-padding-start};
    --padding-end: #{$button-md-round-padding-end};
    --padding-bottom: #{$button-md-round-padding-bottom};
    }


    // Material Design Button Sizes
    // --------------------------------------------------

    :host(.button-large) {
    --padding-top: #{$button-md-large-padding-top};
    --padding-start: #{$button-md-large-padding-start};
    --padding-end: #{$button-md-large-padding-end};
    --padding-bottom: #{$button-md-large-padding-bottom};

    height: #{$button-md-large-height};

    font-size: #{$button-md-large-font-size};
    }

    :host(.button-small) {
    --padding-top: #{$button-md-small-padding-top};
    --padding-start: #{$button-md-small-padding-start};
    --padding-end: #{$button-md-small-padding-end};
    --padding-bottom: #{$button-md-small-padding-bottom};

    height: #{$button-md-small-height};

    font-size: #{$button-md-small-font-size};
    }


    // MD strong Button
    // --------------------------------------------------

    :host(.button-strong) {
    font-weight: #{$button-md-strong-font-weight};
    }

    ::slotted(ion-icon[slot="icon-only"]) {
    @include padding(0);
    }


    // Material Design Button: Hover
    // --------------------------------------------------

    :host(.med-button-solid.ion-color.ion-focused) .button-native::after {
    background: #{current-color(contrast)};

    opacity: .24;
    }

    :host(.med-button-clear.ion-color.ion-focused) .button-native::after,
    :host(.med-button-outline.ion-color.ion-focused) .button-native::after {
    background: #{current-color(base)};

    opacity: .12;
    }

    @media (any-hover: hover) {
    :host(.med-button-solid.ion-color:hover) .button-native::after {
        background: #{current-color(contrast)};

        opacity: .08;
    }

    :host(.med-button-clear.ion-color:hover) .button-native::after,
    :host(.med-button-outline.ion-color:hover) .button-native::after {
        background: #{current-color(base)};

        opacity: .04;
    }
}

// @import './medgrupo/button-default.med.scss';
// @import './medgrupo/button-secondary.med.scss';
// @import './medgrupo/button-tertiary.med.scss';

@import "../../../templarios/abstracts";

:host {
  /**
   * OBS: sobreescrita das css custom properties do ionic.
   * @prop --background: Define a cor de background do componente.
   * @prop --color: Define a cor de texto do componente.
   */
  --background: #{color('brand', 'gradient')};
  --color: #{color('brand', 'gradient', 'contrast')};
  --border-radius: var(--med-border-radius-pill);
  --transition: background 300ms ease-out, color 300ms ease-out, border-color 300ms ease-out, opacity 300ms ease-out;
  --font-size: var(--med-font-size-xxs);
  --padding: 0 var(--med-spacing-inline-xxs);
  --padding-label: 0 var(--med-spacing-inline-xxxs);
  --min-height: 48px;
  --min-width: auto;
}

:host(.med-button) {
  min-height: var(--min-height);
  min-width: var(--min-width);
  height: auto;
  font-size: var(--font-size);
  font-weight: var(--med-font-weight-semibold);
  text-transform: uppercase;
  margin: 0;
}

:host(.med-button) .button-native {
  padding: var(--padding);
  min-height: var(--min-height);
  line-height: var(--med-line-height-compressed);
  box-shadow: none;
}

:host(.med-button) .button-inner__label {
  padding: var(--padding-label);
  display: flex;
  align-items: center;
}

// ////////////////////
// expand
// ////////////////////

// button-has-icon-only
:host(.med-button.button-block.button-has-icon-only) {
  --border-radius: var(--med-border-radius-pill);
}

// ////////////////////
// slotted
// ////////////////////

::slotted(ion-icon) {
  font-size: 24px;
  stroke: var(--color);
  transition: stroke 300ms ease-out;
}

::slotted(ion-icon[slot="start"]) {
  margin: 0;
}

::slotted(ion-icon[slot="end"]) {
  margin: 0;
}

// ////////////////////
// icon-only
// ////////////////////

:host(.med-button.button-has-icon-only) {
  --border-radius: var(--med-border-radius-full);
  --min-height: 48px;
  --min-width: 48px;
  --padding: 0;
  --padding-label: 0;
}

// ////////////////////
// sizes
// ////////////////////

:host(.med-button.med-button--sm) {
  --min-height: 40px;
  --min-width: 40px;
}

:host(.med-button.med-button--sm.button-has-icon-only) {
  --min-width: 40px;
  --padding: 0;
  --padding-label: 0;
}

:host(.med-button.med-button--xs) {
  --padding: 0 var(--med-spacing-inline-base);
  --min-height: 32px;
  --font-size: var(--med-font-size-xxxs);
}

:host(.med-button.med-button--xs) ::slotted(ion-icon) {
  font-size: 16px;
}

:host(.med-button.med-button--xs.button-has-icon-only) {
  --min-width: 32px;
  --padding: 0;
  --padding-label: 0;
}

:host(.med-button.med-button--xxs) {
  --padding: 0 var(--med-spacing-inline-base);
  --min-height: 24px;
  --min-width: 24px;
  --font-size: var(--med-font-size-nano);
}

:host(.med-button.med-button--xxs) ::slotted(ion-icon) {
  font-size: 16px;
}

:host(.med-button.med-button--xxs.button-has-icon-only) {
  --min-width: 24px;
  --padding: 0;
  --padding-label: 0;
}

// ////////////////////
// states
// ////////////////////

@media (any-hover: hover) {
  :host(.med-button:hover) .button-native::before {
    background: color('brand', '3');
    opacity: 1;
  }
}

:host(.med-button.ion-focused) .button-native::before {
  background: color('brand', '3');
  opacity: 1;
}

:host(.med-button.ion-activated) .button-native::before {
  opacity: 1;
}

:host(.med-button.button-disabled) {
  cursor: initial;
  pointer-events: none;
  opacity: var(--med-opacity-level-half);
}

:host(.med-button.button-disabled) .button-native::before {
  opacity: var(--med-opacity-level-half);
}

:host(.med-button) ion-ripple-effect {
  --ripple-color: #{color('brand', '2')};
  --ripple-opacity: 1;
}

// ////////////////////
// color
// ////////////////////

:host(.med-button.med-color)  {
  --background: #{curr-color('color', 'gradient')};
  --color: #{curr-color('color', 'gradient', 'contrast')};
}

@media (any-hover: hover) {
  :host(.med-button.med-color:hover) .button-native::before {
    background: curr-color('color', '3');
  }
}

:host(.med-button.med-color.ion-focused) .button-native::before {
  background: curr-color('color', '3');
}

:host(.med-button.med-color) ion-ripple-effect {
  --ripple-color: #{curr-color('color', '2')};
  --ripple-opacity: 1;
}

// ////////////////////
// neutral
// ////////////////////

:host(.med-button.med-color-neutral)  {
  --background: #{curr-color('neutral')};
  --color: #{curr-color('neutral', null, 'contrast')};
}

@media (any-hover: hover) {
  :host(.med-button.med-color-neutral:hover) .button-native::before {
    background: #{color('neutral', '10', null, var(--med-opacity-level-semitransparent))};
  }
  :host(.med-button.med-color-neutral.med-color-neutral-10:hover) .button-native::before {
    background: #{color('neutral', '1', null, var(--med-opacity-level-semitransparent))};
  }
}

:host(.med-button.med-color-neutral.ion-focused) .button-native::before {
  opacity: var(--med-opacity-level-semitransparent);
}

:host(.med-button.med-color-neutral) ion-ripple-effect {
  --ripple-color: #{color('neutral', '10')};
  --ripple-opacity: var(--med-opacity-level-semitransparent);
}

:host(.med-button.med-color-neutral.med-color-neutral-10) ion-ripple-effect {
  --ripple-color: #{color('neutral', '1')};
  --ripple-opacity: var(--med-opacity-level-semitransparent);
}

// ////////////////////
// feedback
// ////////////////////

:host(.med-button.med-color-feedback)  {
  --background: #{curr-color('feedback')};
  --color: #{curr-color('feedback', null, 'contrast')};
}

@media (any-hover: hover) {
  :host(.med-button.med-color-feedback:hover) .button-native::before {
    background: #{color('neutral', '10', null, var(--med-opacity-level-semitransparent))};
  }
}

:host(.med-button.med-color-feedback.ion-focused) .button-native::before {
  opacity: var(--med-opacity-level-semitransparent);
}

:host(.med-button.med-color-feedback) ion-ripple-effect {
  --ripple-color: #{color('neutral', '10')};
  --ripple-opacity: var(--med-opacity-level-semitransparent);
}

// //////////////////////////////
// after removal and before replace
// //////////////////////////////

:host .button-native::after {
  display: none;
}

:host .button-native::before {
  @include button-state();
  transition: var(--transition);
}
























:host(.med-button--secondary) {
  --background: transparent;
  --color: #{color('brand', '3')};
  --border-color: #{color('brand', '3')};

  --border-width: var(--med-border-width-thin);
  --border-style: solid;

}

:host(.med-button--secondary) ion-ripple-effect {
  --ripple-color: transparent;
  --ripple-opacity: 0;
}

// ////////////////////
// states
// ////////////////////

@media (any-hover: hover) {
  :host(.med-button--secondary:hover) {
    --color: #{color('brand', '4')};
    --background: transparent;
    --border-color: #{color('brand', '4')};
  }
}

:host(.med-button--secondary.ion-focused) {
  --color: #{color('brand', '4')};
  --background: transparent;
  --border-color: #{color('brand', '4')};
}

:host(.med-button--secondary.ion-activated) {
  --color: #{color('brand', '5')};
  --background: transparent;
  --border-color: #{color('brand', '5')};
}

:host(.med-button--secondary.button-disabled) {
  opacity: var(--med-opacity-level-half);
}

// //////////
// before disable
// //////////

@media (any-hover: hover) {
  :host(.med-button--secondary:hover) .button-native::before {
    opacity: 0;
  }
}

:host(.med-button--secondary.ion-focused) .button-native::before {
  opacity: 0;
}

:host(.med-button--secondary.ion-activated) .button-native::before {
  opacity: 0;
}

:host(.med-button--secondary.button-disabled) .button-native::before {
  opacity: 0;
}

// ////////////////////
// color
// ////////////////////

:host(.med-button--secondary.med-color)  {
  --background: transparent;
  --color: #{curr-color('color', '4')};
  --border-color: #{curr-color('color', '4')};
}

@media (any-hover: hover) {
  :host(.med-button--secondary.med-color:hover) {
    --color: #{curr-color('color', '3')};
    --border-color: #{curr-color('color', '3')};
    background: transparent;
  }
}

:host(.med-button--secondary.med-color.ion-activated) {
  --color: #{curr-color('color', '5')};
  --border-color: #{curr-color('color', '5')};
  background: transparent;
}

:host(.med-button--secondary.med-color.ion-focused) {
  --color: #{curr-color('color', '3')};
  --border-color: #{curr-color('color', '3')};
  background: transparent;
}

:host(.med-button--secondary.med-color) ion-ripple-effect {
  --ripple-color: transparent;
  --ripple-opacity: 0;
}

// ////////////////////
// neutral
// ////////////////////

:host(.med-button--secondary.med-color-neutral)  {
  --background: transparent;
  --color: #{curr-color('neutral')};
  --border-color: #{curr-color('neutral')};
}

@media (any-hover: hover) {
  :host(.med-button--secondary.med-color-neutral:hover) {
    --color: #{curr-color('neutral', null, null, var(--med-opacity-level-semiopaque))};
    --border-color: #{curr-color('neutral', null, null, var(--med-opacity-level-semiopaque))};
    background: transparent;
  }
}

:host(.med-button--secondary.med-color-neutral.ion-activated) {
  --color: #{curr-color('neutral', null, null, var(--med-opacity-level-intense))};
  --border-color: #{curr-color('neutral', null, null, var(--med-opacity-level-intense))};
  background: transparent;
}

:host(.med-button--secondary.med-color-neutral.ion-focused) {
  --color: #{curr-color('neutral', null, null, var(--med-opacity-level-semiopaque))};
  --border-color: #{curr-color('neutral', null, null, var(--med-opacity-level-semiopaque))};
  background: transparent;
}

:host(.med-button--secondary.med-color-neutral) ion-ripple-effect {
  --ripple-color: transparent;
  --ripple-opacity: 0;
}

// ////////////////////
// feedback
// ////////////////////

:host(.med-button--secondary.med-color-feedback)  {
  --background: transparent;
  --color: #{curr-color('feedback')};
  --border-color: #{curr-color('feedback')};
}

@media (any-hover: hover) {
  :host(.med-button--secondary.med-color-feedback:hover) {
    --color: #{curr-color('feedback', null, null, var(--med-opacity-level-semiopaque))};
    --border-color: #{curr-color('feedback', null, null, var(--med-opacity-level-semiopaque))};
    background: transparent;
  }
}

:host(.med-button--secondary.med-color-feedback.ion-activated) {
  --color: #{curr-color('feedback', null, null, var(--med-opacity-level-intense))};
  --border-color: #{curr-color('feedback', null, null, var(--med-opacity-level-intense))};
  background: transparent;
}

:host(.med-button--secondary.med-color-feedback.ion-focused) {
  --color: #{curr-color('feedback', null, null, var(--med-opacity-level-semiopaque))};
  --border-color: #{curr-color('feedback', null, null, var(--med-opacity-level-semiopaque))};
  background: transparent;
}

:host(.med-button--secondary.med-color-feedback) ion-ripple-effect {
  --ripple-color: transparent;
  --ripple-opacity: 0;
}

// //////////
// before disable
// //////////

:host(.med-button--secondary.ion-color) .button-native::before {
  opacity: 0;
}

@media (any-hover: hover) {
  :host(.med-button--secondary.ion-color:hover) .button-native::before {
    opacity: 0;
  }
}

:host(.med-button--secondary.ion-color.ion-focused) .button-native::before {
  opacity: 0;
}

:host(.med-button--secondary.ion-color.ion-activated) .button-native::before {
  opacity: 0;
}

:host(.med-button--secondary.ion-color.button-disabled) .button-native::before {
  cursor: initial;
  pointer-events: none;
  opacity: 0;
}

// //////////
// before disable
// //////////

:host(.med-button--secondary.med-neutral) .button-native::before {
  opacity: 0;
}

@media (any-hover: hover) {
  :host(.med-button--secondary.med-neutral:hover) .button-native::before {
    opacity: 0;
  }
}

:host(.med-button--secondary.med-neutral.ion-focused) .button-native::before {
  opacity: 0;
}

:host(.med-button--secondary.med-neutral.ion-activated) .button-native::before {
  opacity: 0;
}

:host(.med-button--secondary.med-neutral.button-disabled) .button-native::before {
  cursor: initial;
  pointer-events: none;
  opacity: 0;
}





















:host(.med-button--tertiary) {
  --background: transparent;
  --color: #{color('neutral', '10')};
  --border-radius: var(--med-border-radius-nano);
  --padding: 0;
  --padding-label: 0 var(--med-spacing-inline-xxxs);
  --min-height: 24px;
  --line-height: #{line-height($med-font-size-xxs)};
  --font-weight: var(--med-font-weight-semibold);
}

:host(.med-button--tertiary) ion-ripple-effect {
  --ripple-color: #{color('brand', '3')};
  --ripple-opacity: var(--med-opacity-level-light);
}

:host(.med-button.med-button--tertiary.button-has-icon-only) {
  --border-radius: var(--med-border-radius-full);
}


// ////////////////////
// slotted
// ////////////////////

::slotted(ion-icon) {
  font-size: 24px;
  stroke: var(--color);
  transition: stroke 300ms ease-out;
}

::slotted(ion-icon[slot="start"]) {
  margin: 0;
  padding-left: var(--med-spacing-inline-xxxs);
}

::slotted(ion-icon[slot="end"]) {
  margin: 0;
  padding-right: var(--med-spacing-inline-xxxs);
}

// ////////////////////
// sizes
// ////////////////////

// lg
:host(.med-button--tertiary.med-button--lg) {
  --font-size: var(--med-font-size-xs);
  --line-height: #{line-height($med-font-size-xs)};
  --min-height: 24px;
  --min-width: 24px;
}

:host(.med-button--tertiary.med-button--lg) ::slotted(ion-icon) {
  font-size: 24px;
}

:host(.med-button--tertiary.med-button--lg.button-has-icon-only) {
  --min-height: 64px;
  --min-width: 64px;
}

:host(.med-button--tertiary.med-button--lg.button-has-icon-only) ::slotted(ion-icon) {
  font-size: 48px;
}

// md
:host(.med-button--tertiary.med-button--md) {
  --font-size: var(--med-font-size-xxs);
  --line-height: #{line-height($med-font-size-xxs)};
  --min-height: 24px;
  --min-width: 24px;
}

:host(.med-button--tertiary.med-button--md) ::slotted(ion-icon) {
  font-size: 24px;
}

:host(.med-button--tertiary.med-button--md.button-has-icon-only) {
  --min-height: 48px;
  --min-width: 48px;
}

:host(.med-button--tertiary.med-button--md.button-has-icon-only) ::slotted(ion-icon) {
  font-size: 32px;
}

// sm
:host(.med-button--tertiary.med-button--sm) {
  --font-size: var(--med-font-size-xxxs);
  --line-height: #{line-height($med-font-size-xxxs)};
  --min-height: 16px;
  --min-width: 16px;
}

:host(.med-button--tertiary.med-button--sm) ::slotted(ion-icon) {
  font-size: 16px;
}

:host(.med-button--tertiary.med-button--sm.button-has-icon-only) {
  --min-height: 40px;
  --min-width: 40px;
}

:host(.med-button--tertiary.med-button--sm.button-has-icon-only) ::slotted(ion-icon) {
  font-size: 24px;
}

// xs
:host(.med-button--tertiary.med-button--xs) {
  --font-size: var(--med-font-size-nano);
  --line-height: #{line-height($med-font-size-nano)};
  --min-height: 16px;
  --min-width: 16px;
}

:host(.med-button--tertiary.med-button--xs) ::slotted(ion-icon) {
  font-size: 16px;
}

:host(.med-button--tertiary.med-button--xs.button-has-icon-only) {
  --min-height: 32px;
  --min-width: 32px;
}

:host(.med-button--tertiary.med-button--xs.button-has-icon-only) ::slotted(ion-icon) {
  font-size: 24px;
}

// xxs
:host(.med-button--tertiary.med-button--xxs) ::slotted(ion-icon) {
  font-size: 16px;
}

:host(.med-button--tertiary.med-button--xxs.button-has-icon-only) {
  --min-height: 24px;
  --min-width: 24px;
}

:host(.med-button--tertiary.med-button--xxs.button-has-icon-only) ::slotted(ion-icon) {
  font-size: 24px;
}

// xxxs
:host(.med-button--tertiary.med-button--xxxs.button-has-icon-only) {
  --min-height: 16px;
  --min-width: 16px;
}

:host(.med-button--tertiary.med-button--xxxs.button-has-icon-only) ::slotted(ion-icon) {
  font-size: 16px;
}

// ////////////////////
// states
// ////////////////////

:host(.med-button--tertiary.button-disabled) {
  --color: color('neutral', '10');
}

// //////////
// before disable
// //////////

@media (any-hover: hover) {
  :host(.med-button--tertiary:hover) .button-native::before {
    background: color('brand', '3', null,  var(--med-opacity-level-light));
  }
}

:host(.med-button--tertiary.ion-focused) .button-native::before {
  background: color('brand', '3', null,  var(--med-opacity-level-light));
}

:host(.med-button--tertiary.ion-activated) .button-native::before {
  background: transparent
}

:host(.med-button--tertiary.button-disabled) .button-native::before {
  opacity: 0;
}

// ////////////////////
// color
// ////////////////////

:host(.med-button--tertiary.med-color) {
  --background: transparent;
  --color: #{color('neutral', '10')};
}

:host(.med-button--tertiary.med-color) ion-ripple-effect {
  --ripple-color: #{curr-color('color', '3')};
}

@media (any-hover: hover) {
  :host(.med-button--tertiary.med-color:hover) .button-native::before {
    background: curr-color('color', '3', null,  var(--med-opacity-level-light));
  }
}

:host(.med-button--tertiary.med-color.ion-focused) .button-native::before {
  background: curr-color('color', '3', null, var(--med-opacity-level-light));
}

:host(.med-button--tertiary.med-color.ion-activated) .button-native::before {
  background: transparent
}

:host(.med-button--tertiary.med-color.button-disabled) .button-native::before {
  opacity: 0;
}

// ////////////////////
// feedback
// ////////////////////

:host(.med-button--tertiary.med-color-feedback) {
  --background: transparent;
  --color: #{color('neutral', '10')};
}

:host(.med-button--tertiary.med-color-feedback) ion-ripple-effect {
  --ripple-color: #{curr-color('feedback')};
}

@media (any-hover: hover) {
  :host(.med-button--tertiary.med-color-feedback:hover) .button-native::before {
    background: curr-color('feedback', null, null,  var(--med-opacity-level-light));
  }
}

:host(.med-button--tertiary.med-color-feedback.ion-focused) .button-native::before {
  background: curr-color('feedback', null, null, var(--med-opacity-level-light));
}

:host(.med-button--tertiary.med-color-feedback.ion-activated) .button-native::before {
  background: transparent
}

:host(.med-button--tertiary.med-color-feedback.button-disabled) .button-native::before {
  opacity: 0;
}

// ////////////////////
// neutral
// ////////////////////

:host(.med-button--tertiary.med-color-neutral) {
  --background: transparent;
  --color: #{color('neutral', '10')};
}

// //////////////////////////////
// solid
// //////////////////////////////

:host(.med-button.med-button--solid) {
  --background: #{color('brand', '3')};
  --color: #{color('brand', '3', 'contrast')};
}

// ////////////////////
// color
// ////////////////////

:host(.med-button.med-button--solid.med-color)  {
  --background: #{curr-color('color', '3')};
  --color: #{curr-color('color', '3', 'contrast')};
}

@media (any-hover: hover) {
  :host(.med-button.med-button--solid.med-color:hover) .button-native::before {
    background: curr-color('color', '3');
  }
}

:host(.med-button.med-button--solid.med-color.ion-focused) .button-native::before {
  background: curr-color('color', '3');
}


// ////////////////////
// neutral
// ////////////////////

:host(.med-button.med-button--solid.med-color-neutral)  {
  --background: #{curr-color('neutral')};
  --color: #{curr-color('neutral', null, 'contrast')};
}

@media (any-hover: hover) {
  :host(.med-button.med-button--solid.med-color-neutral:hover) .button-native::before {
    background: #{color('neutral', '10', null, var(--med-opacity-level-semitransparent))};
  }
  :host(.med-button.med-button--solid.med-color-neutral.med-color-neutral-10:hover) .button-native::before {
    background: #{color('neutral', '1', null, var(--med-opacity-level-semitransparent))};
  }
}

:host(.med-button.med-button--solid.med-color-neutral.ion-focused) .button-native::before {
  opacity: var(--med-opacity-level-semitransparent);
}

:host(.med-button.med-button--solid.med-color-neutral) ion-ripple-effect {
  --ripple-color: #{color('neutral', '10')};
  --ripple-opacity: var(--med-opacity-level-semitransparent);
}

:host(.med-button.med-button--solid.med-color-neutral.med-color-neutral-10) ion-ripple-effect {
  --ripple-color: #{color('neutral', '1')};
  --ripple-opacity: var(--med-opacity-level-semitransparent);
}

// ////////////////////
// feedback
// ////////////////////

:host(.med-button.med-button--solid.med-color-feedback)  {
  --background: #{curr-color('feedback')};
  --color: #{curr-color('feedback', null, 'contrast')};
}

@media (any-hover: hover) {
  :host(.med-button.med-button--solid.med-color-feedback:hover) .button-native::before {
    background: #{color('neutral', '10', null, var(--med-opacity-level-semitransparent))};
  }
}

:host(.med-button.med-button--solid.med-color-feedback.ion-focused) .button-native::before {
  opacity: var(--med-opacity-level-semitransparent);
}

:host(.med-button.med-button--solid.med-color-feedback) ion-ripple-effect {
  --ripple-color: #{color('neutral', '10')};
  --ripple-opacity: var(--med-opacity-level-semitransparent);
}
