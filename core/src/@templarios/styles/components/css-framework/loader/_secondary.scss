[tp-loader-secondary] {
  --background: hsl(var(--med-color-neutral-10));
  display: inline-block;
  position: relative;
  width: 24px;
  height: 24px;

  div {
    transform-origin: 12px 12px;
    animation: loader-spinner 0.8s linear infinite;
    
    &:after {
      content: " ";
      display: block;
      position: absolute;
      top: 1px;
      left: 11px;
      width: 2px;
      height: 6px;
      border-radius: 10px;
      background: var(--background);
    }    
    
    &:nth-child(1) {
      transform: rotate(0deg);
      animation-delay: -0.7s;
    }

    &:nth-child(2) {
      transform: rotate(45deg);
      animation-delay: -0.6s;
    }

    &:nth-child(3) {
      transform: rotate(90deg);
      animation-delay: -0.5s;
    }

    &:nth-child(4) {
      transform: rotate(135deg);
      animation-delay: -0.4s;
    }

    &:nth-child(5) {
      transform: rotate(180deg);
      animation-delay: -0.3s;
    }

    &:nth-child(6) {
      transform: rotate(225deg);
      animation-delay: -0.2s;
    }

    &:nth-child(7) {
      transform: rotate(270deg);
      animation-delay: -0.1s;
    }

    &:nth-child(8) {
      transform: rotate(315deg);
      animation-delay: 0s;
    }
  }
}

@keyframes loader-spinner {
  0% {
    opacity: 1;
  }

  100% {
    opacity: .3;
  }
}

//
// color
//
@each $color in $tp-color {
  @for $i from 1 through 5 {
    @include generate-component-color([tp-loader-secondary], $color, $i) {
      --background: #{tp-color($color, $i)};
    }
  }
}

//
// neutral
//
@for $i from 1 through 10 {
  @include generate-component-neutral([tp-loader-secondary],
    neutral-#{$i},
    $i ) {
    --background: #{tp-neutral($i)};
  }
}

@for $i from 1 through 9 {
  @include generate-component-neutral([tp-loader-secondary],
    neutral-#{$i}#{5},
    $i ) {
      --background: #{tp-neutral($i, 5)};
  }
}

//
// feedback
//
@each $color in $tp-feedback {
  @include generate-component-feedback([tp-loader-secondary],
    fb-#{$color},
    $color ) {
      --background: #{tp-feedback($color)};
  }
}