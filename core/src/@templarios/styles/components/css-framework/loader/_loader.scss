[tp-loader] {
  --stroke: hsl(var(--med-color-neutral-10));
  height: 94px;
  width: 94px;  
  display: flex;
  align-items: center;
  justify-content: center;

  [tp-loader-svg] {
    stroke: var(--stroke);
    height: 40px;
    width: 40px;  
    transform: scale(2.35);
  }
  
  [tp-loader-rectangles] {
    stroke: var(--stroke);
    animation-name: animate-stroke;
    animation-duration: 4s;
    animation-timing-function: ease-in-out;
    animation-iteration-count: infinite;
    animation-fill-mode: forwards;
    stroke-dashoffset: 1000;
    stroke-dasharray: 1000;
  }

  [tp-loader-circle] {
    animation-name: animate-stroke-2;
    animation-duration: 4s;
    animation-timing-function: ease-in-out;
    animation-iteration-count: infinite;
    animation-fill-mode: forwards;
    stroke-dashoffset: 1000;
    stroke-dasharray: 1000;
    fill: var(--stroke);
  }
}

@keyframes animate-stroke {
  to {
    stroke-dashoffset: 0;
  }
}

@keyframes animate-stroke-2 {
  to {
    stroke-dashoffset: 0;
  }
}

//
// color
//
@each $color in $tp-color {
  @for $i from 1 through 5 {
    @include generate-component-color([tp-loader], $color, $i) {
      --stroke: #{tp-color($color, $i)};
    }
  }
}

//
// neutral
//
@for $i from 1 through 10 {
  @include generate-component-neutral([tp-loader],
    neutral-#{$i},
    $i ) {
    --stroke: #{tp-neutral($i)};
  }
}

@for $i from 1 through 9 {
  @include generate-component-neutral([tp-loader],
    neutral-#{$i}#{5},
    $i ) {
      --stroke: #{tp-neutral($i, 5)};
  }
}

//
// feedback
//
@each $color in $tp-feedback {
  @include generate-component-feedback([tp-loader],
    fb-#{$color},
    $color ) {
    --stroke: #{tp-feedback($color)};
  }
}