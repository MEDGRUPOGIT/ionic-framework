ion-text {
  @each $type-value,
  $type in $tp-type {
    &[token='#{$type-value}'] * {

      @each $property,
      $value in $type {
        #{$property}: #{$value};
      }
    }
  }
}

ion-text * {
  margin: 0;
  font-weight: 400;
  font-size: 16px;
  line-height: 16px;
}

ion-text,
ion-text a {
  color: var(--tp-color-neutral-10);
}

ion-text.ion-color,
ion-text.ion-color a {
  color: var(--ion-color-base);
}

//
// color
//
@each $color in $tp-color {
  @for $i from 1 through 5 {
    @include generate-component-color(ion-text, $color, $i) {
      color: #{tp-color($color, $i)} !important;

      * {
        color: #{tp-color($color, $i)} !important;
      }
    }
  }
}

//
// neutral
//
@for $i from 1 through 10 {
  @include generate-component-neutral(ion-text, neutral-#{$i}, $i) {
    color: #{tp-neutral($i)} !important;

    * {
      color: #{tp-neutral($i)} !important;
    }
  }
}

@for $i from 1 through 9 {
  @include generate-component-neutral(ion-text, neutral-#{$i}#{5}, $i) {
    color: #{tp-neutral($i, 5)} !important;

    * {
      color: #{tp-neutral($i, 5)} !important;
    }
  }
}

//
// feedback
//
@each $color in $tp-feedback {
  @include generate-component-feedback(ion-text, fb-#{$color}, $color) {
    color: #{tp-feedback($color)} !important;

    * {
      color: #{tp-feedback($color)} !important;
    }
  }
}
