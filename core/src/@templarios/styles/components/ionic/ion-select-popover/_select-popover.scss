ion-popover.tp-popover {
  --top: auto;
  --left: auto;
  --bottom: auto;
  --right: auto;

  .popover-arrow {
    display: none !important;
  }

  .popover-content {
    --background: hsl(var(--med-color-neutral-3));
    --border-radius: 0 0 8px 8px;
    --max-height: 220px;
    left: var(--left) !important;
    top: var(--top) !important;
    border-radius: var(--border-radius) !important;
    transform: translateX(-1px) !important;
  }

  ion-list {
    margin: 0 !important;
  }

  .select-interface-option {
    --border-style: initial;
    --color: hsl(var(--med-color-neutral-10));
    --background: hsl(var(--med-color-neutral-3));
    --padding-top: 12px;
    --padding-bottom: 12px;
    cursor: pointer;
    font-size: 14px !important;

    --padding-top: 0;
    --padding-bottom: 0;
    --padding-right: 0;
    --padding-left: 0;
    --padding-start: 0;
    --padding-end: 0;

    &:not(:last-child) {
      border-bottom: 1px solid hsl(var(--med-color-neutral-4));
    }

    ion-label {
      position: relative;
      padding: 12px 16px;
    }

    ion-radio {
      position: absolute;
      top: 0;
      left: 0;
      opacity: 0;
      width: 100%;
      height: 100%;
      margin: 0;
    }
  }

  &--secondary {
    .popover-content {
      --background: hsl(var(--med-color-neutral-4));
    }

    .select-interface-option {
      --background: hsl(var(--med-color-neutral-4));

      &:not(:last-child) {
        border-bottom: 1px solid hsl(var(--med-color-neutral-5));
      }
    }
  }

  &--inverted {
    .popover-content {
      --border-radius: 8px 8px 0 0;

      top: var(--top) !important;
      left: var(--left) !important;
      bottom: var(--bottom) !important;
      right: var(--right) !important;
      border-radius: var(--border-radius) !important;
      transform: none !important;
    }
  }
}

//
// color
//
@each $color in $tp-color {
  @for $i from 1 through 5 {
    @include generate-component-color(ion-popover, $color, $i) {
      .popover-content {
        --background: #{tp-color($color, $i)};
        --tp-scroll-color-content: #{tp-contrast-color($i)};

        &::-webkit-scrollbar-thumb {
          color: #{tp-contrast-color($i)};
        }
      }

      .sc-ion-select-popover {
        background: #{tp-color($color, $i)};
      }

      .select-interface-option {
        --background: #{tp-color($color, $i)};
        --color: #{tp-contrast-color($i)};

        &:not(:last-child) {
          border-bottom: 1px solid #{tp-contrast-color($i)};
        }
      }
    }
  }
}

//
// neutral
//
@for $i from 1 through 10 {
  @include generate-component-neutral(ion-popover, neutral-#{$i}, $i) {
    .popover-content {
      --background: #{tp-neutral($i)};
      --tp-scroll-color-content: #{tp-contrast-neutral($i)};

      &::-webkit-scrollbar-thumb {
        color: #{tp-contrast-neutral($i)};
      }
    }

    .sc-ion-select-popover {
      background: #{tp-neutral($i)};
    }

    .select-interface-option {
      --background: #{tp-neutral($i)};
      --color: #{tp-contrast-neutral($i)};

      &:not(:last-child) {
        border-bottom: 1px solid #{tp-contrast-neutral($i)};
      }
    }
  }
}
@for $i from 1 through 9 {
  @include generate-component-neutral(ion-popover, neutral-#{$i}#{5}, $i) {
    .popover-content {
      --background: #{tp-neutral($i, 5)};
      --tp-scroll-color-content: #{tp-contrast-neutral($i)};

      &::-webkit-scrollbar-thumb {
        color: #{tp-contrast-neutral($i)};
      }
    }

    .sc-ion-select-popover {
      background: #{tp-neutral($i, 5)};
    }

    .select-interface-option {
      --background: #{tp-neutral($i, 5)};
      --color: #{tp-contrast-neutral($i)};

      &:not(:last-child) {
        border-bottom: 1px solid #{tp-contrast-neutral($i)};
      }
    }
  }
}

//
// feedback
//
@each $color in $tp-feedback {
  @include generate-component-feedback(ion-popover, fb-#{$color}, $color) {
    .popover-content {
      --background: #{tp-feedback($color)};
      --tp-scroll-color-content: hsl(var(--med-color-neutral-1));

      &::-webkit-scrollbar-thumb {
        color: hsl(var(--med-color-neutral-1));
      }
    }

    .sc-ion-select-popover {
      background: #{tp-feedback($color)};
    }

    .select-interface-option {
      --background: #{tp-feedback($color)};
      --color: hsl(var(--med-color-neutral-1));

      &:not(:last-child) {
        border-bottom: 1px solid hsl(var(--med-color-neutral-1));
      }
    }
  }
}
